import cv2
import numpy as np

# === 1. Charger l'image en niveaux de gris ===
image = cv2.imread('bille.png', cv2.IMREAD_GRAYSCALE)

# === 2. Appliquer un flou pour réduire le bruit ===
blur = cv2.GaussianBlur(image, (5, 5), 0)

# === 3. Seuillage automatique avec Otsu ===
_, thresh = cv2.threshold(blur, 0, 255, cv2.THRESH_BINARY + cv2.THRESH_OTSU)

# === 4. Trouver les contours ===
contours, _ = cv2.findContours(thresh, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)

# === 5. Filtrer les contours avec a >= 100 (a = nombre de points dans le contour)
filtered_contours = [cnt for cnt in contours if cnt.shape[0] >= 100]

# === 6. Sélection des bons contours à garder
if len(filtered_contours) == 1:
    selected_contours = filtered_contours
elif len(filtered_contours) >= 2:
    # Trier par aire décroissante et prendre les deux plus gros
    sorted_contours = sorted(filtered_contours, key=cv2.contourArea, reverse=True)
    selected_contours = sorted_contours[:2]
else:
    selected_contours = []  # Aucun contour valide

# === 7. Dessiner les contours sélectionnés ===
output = cv2.cvtColor(image, cv2.COLOR_GRAY2BGR)

for i, cnt in enumerate(selected_contours):
    cv2.drawContours(output, [cnt], -1, (0, 0, 255), 2)  # Rouge

# === 8. Affichage
cv2.imshow("Contours sélectionnés", output)
cv2.waitKey(0)
cv2.destroyAllWindows()
