import matplotlib.pyplot as plt

# ================================
# ðŸ“Œ TEST DU MODÃˆLE SUR LES DONNÃ‰ES DE TEST
# ================================
def test_and_display_results(image_dir, annotation_dir, model_path='csrnet_model.h5', target_size=(256, 256)):
    # Charger les donnÃ©es de test
    X, Y = load_data(image_dir, annotation_dir, target_size)
    
    # SÃ©parer en train et test
    _, X_test, _, Y_test = train_test_split(X, Y, test_size=0.2, random_state=42)
    
    # Charger le modÃ¨le sauvegardÃ©
    model = tf.keras.models.load_model(model_path)
    
    # Faire des prÃ©dictions sur les donnÃ©es de test
    predictions = model.predict(X_test)

    # Afficher quelques exemples de comparaison entre les ground truth et les prÃ©dictions
    for i in range(5):  # Afficher 5 exemples (vous pouvez ajuster le nombre)
        plt.figure(figsize=(12, 8))
        
        # Afficher l'image
        plt.subplot(1, 3, 1)
        plt.imshow(X_test[i])
        plt.title('Image')
        plt.axis('off')
        
        # Afficher la carte de densitÃ© (Ground Truth)
        plt.subplot(1, 3, 2)
        plt.imshow(Y_test[i].reshape(target_size), cmap='jet')
        plt.title('Ground Truth')
        plt.axis('off')

        # Afficher la prÃ©diction
        plt.subplot(1, 3, 3)
        plt.imshow(predictions[i].reshape(target_size), cmap='jet')
        plt.title('Prediction')
        plt.axis('off')
        
        plt.show()

# ================================
# ðŸ“Œ LANCEMENT DU TEST
# ================================
if __name__ == "__main__":
    image_dir = "path_to_images"
    annotation_dir = "path_to_annotations"
    
    test_and_display_results(image_dir, annotation_dir)
