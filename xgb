def load_data(image_dir, annotation_dir, target_size=(256, 256)):
    images = []
    density_maps = []
    
    image_paths = [f for f in os.listdir(image_dir) if f.endswith('.jpg') or f.endswith('.png')]
    
    for img_name in image_paths:
        img_path = os.path.join(image_dir, img_name)
        ann_path = os.path.join(annotation_dir, img_name.replace('.jpg', '.txt').replace('.png', '.txt'))
        
        if os.path.exists(ann_path):
            # Charger et redimensionner l'image
            image = cv2.imread(img_path, cv2.IMREAD_COLOR)
            image = cv2.resize(image, target_size)
            image = image.astype(np.float32) / 255.0  # Normalisation
            images.append(image)

            # Lire les annotations et générer la carte de densité
            objects = read_dota_annotations(ann_path)
            density_map = generate_density_map(image, objects, sigma=10)
            
            # Redimensionner la carte de densité à 32x32 (si vous voulez sortir à cette taille)
            density_map = cv2.resize(density_map, (32, 32))  # Redimensionner les étiquettes
            density_maps.append(density_map)

    images = np.array(images)
    density_maps = np.array(density_maps).reshape(-1, 32, 32, 1)  # Ajouter un canal

    return images, density_maps
