import pandas as pd
from collections import defaultdict

# Exemple
data = {
    "pics": [
        {"12.4": ["A"], "25.3": ["B"], "55.1": ["C"]},     # Chrom 0
        {"11.1": ["A"], "26.8": ["B"], "57.7": ["C"]},     # Chrom 1 (identique à 0)
        {"10.0": ["B"], "22.0": ["C"], "33.0": ["A"]},     # Chrom 2 (même noms mais ordre différent)
        {"8.0": ["A"], "30.0": ["B"]},                     # Chrom 3 (différent)
        {"15.0": ["A"], "25.0": ["B"], "55.0": ["C"]},     # Chrom 4 (identique à 0 et 1)
    ]
}
df = pd.DataFrame(data)

# Extraire les séquences ordonnées des noms de pics pour chaque chromatogramme
def extract_ordered_component_sequence(pic_dict):
    sorted_items = sorted(pic_dict.items(), key=lambda x: float(x[0]))  # trié par temps
    return tuple([v[0] for _, v in sorted_items if float(_) <= 150])  # tuple immuable

# Dictionnaire de regroupement : clé = séquence, valeur = indices
sequence_to_indices = defaultdict(list)

for idx, row in df.iterrows():
    sequence = extract_ordered_component_sequence(row["pics"])
    sequence_to_indices[sequence].append(idx)

# Affichage
print("Groupes de chromatogrammes avec même séquence ordonnée de noms de composants :\n")
for seq, indices in sequence_to_indices.items():
    if len(indices) > 1:
        print(f"Séquence {seq} → Chromatogrammes {indices}")
