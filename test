from tensorflow.keras.metrics import MeanIoU, Precision, Recall

model.compile(optimizer=Adam(lr=1e-4), 
              loss='binary_crossentropy', 
              metrics=['accuracy', MeanIoU(num_classes=2), Precision(), Recall()])

def testGenerator(test_path, num_image=19, target_size=(256, 256), flag_multi_class=False, as_gray=True):
    for i in range(num_image):
        img = io.imread(os.path.join(test_path, "%d.png" % i), as_gray=as_gray)
        img = img / 255
        img = trans.resize(img, target_size)
        img = np.reshape(img, img.shape + (1,)) if (not flag_multi_class) else img
        img = np.reshape(img, (1,) + img.shape)
        yield img

test_data = testGenerator("data/test")
results = model.evaluate(test_data, steps=30)
print("Test accuracy:", results[1])