    data = np.array(list(zip(diameters, mean_pixel_values, scores)))

    # Appliquer K-Means pour le clustering
    num_clusters = 3  # Définir le nombre de clusters
    kmeans = KMeans(n_clusters=num_clusters, random_state=42)
    labels = kmeans.fit_predict(data)

    # Couleurs pour les clusters
    colors = plt.cm.tab10(np.linspace(0, 1, num_clusters))

    # Graphique 2D : Valeur moyenne des pixels en fonction des diamètres
    plt.figure(figsize=(10, 6))
    for cluster in range(num_clusters):
        cluster_indices = labels == cluster
        plt.scatter(
            diameters[cluster_indices], 
            np.array(mean_pixel_values)[cluster_indices],
            color=colors[cluster],
            label=f"Cluster {cluster + 1}"
        )
    plt.title("Valeur moyenne des pixels en fonction du diamètre (par clusters)")
    plt.xlabel("Diamètre des particules")
    plt.ylabel("Valeur moyenne des pixels")
    plt.legend()
    plt.grid()
    plt.show()
