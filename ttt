import json
import matplotlib.pyplot as plt
import pandas as pd
import numpy as np

def plot_chromatogram_from_json(json_file, output_dir="chromatogram_plots"):
    """
    Lit un fichier JSON contenant des chromatogrammes et génère les courbes correspondantes.
    
    Args:
        json_file (str): Chemin vers le fichier JSON
        output_dir (str): Dossier de sortie pour les graphiques
    """
    # Créer le dossier de sortie
    import os
    os.makedirs(output_dir, exist_ok=True)
    
    # Charger les données JSON
    with open(json_file, 'r') as f:
        data = json.load(f)
    
    # Cas 1: Format DataFrame-like (liste de dictionnaires)
    if isinstance(data, list):
        for i, chromatogram in enumerate(data):
            try:
                x = chromatogram['x']
                y = chromatogram['y']
                plot_single_chromatogram(x, y, f"Chromatogram_{i}", output_dir)
            except KeyError:
                print(f"Structure invalide dans l'élément {i} - clés 'x' ou 'y' manquantes")
    
    # Cas 2: Format imbriqué (comme dans les exemples précédents)
    elif 'chromatogrammes' in data:
        for chromato in data['chromatogrammes']:
            try:
                x = [point['x'] for point in chromato['points']]
                y = [point['y'] for point in chromato['points']]
                plot_single_chromatogram(x, y, chromato.get('nom', 'Unnamed'), output_dir)
            except KeyError:
                print(f"Structure invalide dans le chromatogramme {chromato.get('nom', 'Unnamed')}")
    
    # Cas 3: Format pandas-like (comme dans votre exemple)
    elif all(key in data for key in ['x', 'y']):
        df = pd.DataFrame(data)
        for i, row in df.iterrows():
            try:
                plot_single_chromatogram(row['x'], row['y'], f"Chromatogram_{i}", output_dir)
            except KeyError:
                print(f"Ligne {i} invalide - clés 'x' ou 'y' manquantes")
    
    else:
        print("Format JSON non reconnu")

def plot_single_chromatogram(x, y, title, output_dir):
    """Trace un seul chromatogramme et l'enregistre"""
    plt.figure(figsize=(12, 6))
    plt.plot(x, y, 'b-', linewidth=1)
    plt.title(title)
    plt.xlabel('Temps (min)')
    plt.ylabel('Intensité (mAU)')
    plt.grid(True)
    
    # Enregistrement
    filename = f"{title.replace(' ', '_')}.png"
    plt.savefig(os.path.join(output_dir, filename), dpi=300, bbox_inches='tight')
    plt.close()
    print(f"Chromatogramme sauvegardé : {filename}")

# Exemple d'utilisation
plot_chromatogram_from_json("chromatogrammes.json")